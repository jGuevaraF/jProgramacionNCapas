@model ML.Empleado

@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center">Registro de Empleado</h2>

@using (Html.BeginForm("Form", "Empleado", FormMethod.Post, new { enctype = "multipart/form-data", @class = "container" }))
{
   
    @Html.HiddenFor(model => model.Foto)
    @Html.HiddenFor(model => model.Accion)


    <div class="row justify-content-center mb-5">
        <div class="col-md-6">
            <div class="text-center mt-4">
                <label for="NumeroEmpleado">
                    <i class="fa-solid fa-circle-user fa-xl" style="color: #000000;"></i>Número Empleado
                </label>
                <div class="d-flex justify-content-center mb-2">
                    @Html.TextBoxFor(model => model.NumeroEmpleado, new { @class = "form-control" })
                    <label class="text-danger">@Html.ValidationMessageFor(model => model.NumeroEmpleado)</label>
                </div>

                <label for="RFC">
                    <i class="fas fa-user"></i> RFC
                </label>
                <div class="d-flex justify-content-center mb-2">
                    @Html.TextBoxFor(model => model.RFC, new { @class = "form-control" })
                </div>

                <label for="NombreEmpleado">
                    <i class="fas fa-user"></i> Nombre Empleado
                </label>
                <div class="d-flex justify-content-center mb-2">
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
                    <label class="text-danger">@Html.ValidationMessageFor(model => model.Nombre)</label>
                </div>

                <label for="ApellidoPaterno">
                    <i class="fas fa-user"></i> Apellido Paterno
                </label>
                <div class="d-flex justify-content-center mb-2">
                    @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control" })
                    <label class="text-danger">@Html.ValidationMessageFor(model => model.ApellidoPaterno)</label>
                </div>

                <label for="ApellidoMaterno">
                    <i class="fas fa-user"></i> Apellido Materno
                </label>
                <div class="d-flex justify-content-center mb-2">
                    @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control" })
                </div>


            </div>
        </div>

        <div class="col-md-6">
            <div class="text-center">
                <label for="Email">
                    <i class="fa-solid fa-square-envelope fa-xl" style="color: #000000;"></i> Email
                </label>
                <div class="d-flex justify-content-center mb-2">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    <label class="text-danger">@Html.ValidationMessageFor(model => model.Email)</label>
                </div>

                <label for="Telefono">
                    <i class="fa-solid fa-key fa-xl" style="color: #000000;"></i> Teléfono
                </label>
                <div class="d-flex justify-content-center mb-2">
                    @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control"})
                    <label class="text-danger">@Html.ValidationMessageFor(model => model.Telefono)</label>
                </div>

                <i class="fas fa-calendar-alt"></i>
                @Html.LabelFor(model => model.FechaNacimiento)
                <div class="d-flex justify-content-center">
                    @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control" })
                    <label class="text-danger">@Html.ValidationMessageFor(model => model.FechaNacimiento)</label>
                </div>

                <i class="fas fa-id-card"></i>
                @Html.LabelFor(model => model.NSS)
                <div class="d-flex justify-content-center">
                    @Html.TextBoxFor(model => model.NSS, new { @class = "form-control" })
                </div>

                <div class="d-flex justify-content-center m-2">
                    @Html.DropDownListFor(model => model.Empresa.IdEmpresa, new SelectList(Model.Empresa.Empresas, "IdEmpresa", "Nombre"), "Selecciona una Empresa ", new { @class = "form-control" })
                </div>


            </div>
        </div>
    </div>

    <div class="text-center mt-4">
        @if (Model.Foto != null || Model.Foto == "")
        {
            <div class="d-inline-block">
                <img id="img" src="data:image/*;base64,@Model.Foto" width="200" height="200" class="mb-2" />
                <input id="Imagen" name="Imagen" type="file" class="form-control" onchange="ValidarImagen(), visualizarImagen(this)" />
            </div>
        }
        else
        {
            <div class="d-inline-block">
                <img id="img" src="https://png.pngtree.com/png-vector/20220608/ourlarge/pngtree-faceless-user-anonymous-unknown-icon-png-image_4816463.png" width="200" height="200" class="mb-2" />
                <input id="Imagen" name="Imagen" type="file" class="form-control" onchange="ValidarImagen(), visualizarImagen(this)" />
            </div>
        }
    </div>

    <div class="row justify-content-center mt-3">
        <div class="col-md-6 text-center">
            <button type="submit" class="btn btn-success" id="botonGuardar">
                <span><i class="fa-solid fa-floppy-disk fa-xl" style="color: #000000;" id="iconoGuardar"></i></span>
                Guardar
            </button>
            <a href="@Url.Action("GetAll", "Empleado")" class="btn btn-secondary" id="btnRegresar">
                <span><i class="fa-solid fa-rotate-left fa-xl" style="color: #000000;" id="iconoRegresar"></i></span>
                Regresar
            </a>
        </div>
    </div>


}

@Scripts.Render("~/bundles/jquery")

<script>
    $('#botonGuardar').hover(
        function () {
            $("#botonGuardar").removeClass('btn-success');
            $("#botonGuardar").css('background-color', '#11ff06');
            $('#iconoGuardar').addClass('fa-shake');
        },
        function () {
            $('#iconoGuardar').removeClass('fa-shake');
            $("#botonGuardar").css('background-color', '');
            $("#botonGuardar").addClass('btn-success');
        }
    );

    $("#btnRegresar").hover(
        function () {
            $("#btnRegresar").removeClass('btn-secondary')
            $("#btnRegresar").addClass('btn-danger')
            $('#iconoRegresar').addClass('fa-spin fa-spin-reverse')
        },
        function () {
            $("#btnRegresar").removeClass('btn-danger')
            $("#btnRegresar").addClass('btn-secondary')
            $('#iconoRegresar').removeClass('fa-spin fa-spin-reverse')
        }
    );

    function ValidarImagen() {
        var extensionesPermitidas = ['jpeg', 'jpg', 'png'];
        var extensionArchivo = document.getElementById('Imagen').value.split('.').pop().toLowerCase();
        var isValidFile = false; //saber si es valida o no es valida
        for (var index in extensionesPermitidas) {
            if (extensionArchivo === extensionesPermitidas[index]) {
                isValidFile = true;
                break;
            }
        }
        if (!isValidFile) {
            alert('Las extensiones permitidas son : *.' + extensionesPermitidas.join(', *.'));
            $("#Imagen").val("")
        }
        return isValidFile;

    }

    function visualizarImagen(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#img').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>